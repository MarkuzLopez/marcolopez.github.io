{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","cuidadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","cuidad","_this","current","value","pais","datosConsulta","onSubmit","this","type","id","ref","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","console","log","_this$props$resultado","resultado","name","weather","main","urlIcono","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","proptypes","PropTypes","object","isRequired","App","state","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","json","datos","setState","catch","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.404e8b85.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => { \n    return(\n        <div>\n            <nav>\n                <div className=\"nav-wrapper light darken-2\">\n                   {/* <a className=\"brand-logo\">{props.titulo}</a> */}\n                   <h3 className=\"brand-log\">{props.titulo}</h3>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\nexport default Header;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component {\n  \n    //declarar las variables  \n    cuidadRef = React.createRef();\n    paisRef = React.createRef();\n\n    buscarClima = (e) => {\n        e.preventDefault();\n        /// leer los refs(variable) y crear el objeto \n        const respuesta = { \n            cuidad: this.cuidadRef.current.value, \n            pais: this.paisRef.current.value\n        }\n        \n        // enviar por propsps\n         this.props.datosConsulta(respuesta);\n\n        //opcional resetear el formulario\n    }\n\n    render() {\n    return (\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <form onSubmit={this.buscarClima} >\n              <div className=\"input-field col s12 m8 l4 offset-m2\">\n                <input type=\"text\" id=\"cuidad\" ref={this.cuidadRef} />\n                <label htmlFor=\"cuidad\">Cuidad: </label>\n              </div>\n              <div className=\"input-field col s12 m8 l4 offset-m2\">\n                <select ref={this.paisRef} >\n                  <option value=\"\" defaultValue>\n                    Elige un pais:  \n                  </option>\n                  <option value=\"AR\">Argentina</option>\n                  <option value=\"CO\">COLOMBIA</option>\n                  <option value=\"CR\">COSTA RICA</option>\n                  <option value=\"ES\">ESPAÃ‘A </option>\n                  <option value=\"US\">ESTADOS UNIDOS </option>\n                  <option value=\"MX\">MEXICO </option>\n                  <option value=\" PE\">PERU </option>\n                </select>\n                <label htmlFor=\"pais\">Pais: </label>                \n              </div>\n              <div className=\"input-field col s12 m8 l4 offset-2 buscador\">\n                  <input type=\"submit\" className=\"waves-effect waves-light \n                    btn-large green accent-4\" value=\"Buscar...\"\n                  />\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFormulario.propTypes = { \n    datosConsulta: PropTypes.func.isRequired\n}\n\nexport default Formulario;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = (props) => { \n    return (\n        <div className=\"container\" >\n            <div className=\"row\">\n                <div className=\"col s12 m6 offset-m3\">\n                    <div className=\"card-panel red darken-4 error\">\n                        {props.mensaje}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nError.propTypes = { \n    mensaje: PropTypes.string.isRequired\n}\n\nexport default Error;","import  React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clima extends Component{ \n\n    mostrarResultado = () => {\n console.log('se llama la funcion');\n \n        /// obtener los datos de la consulta \n\n        const {name, weather, main } =  this.props.resultado;\n        if(!name || !weather || !main) return null; \n        // constante para kelvin\n        const kelvin = 273.15;\n        const urlIcono = `https://openweathermap.org/img/w/${weather[0].icon}.png`;\n        const alt = `clima de ${name}`\n        return (\n           <div className=\"row\" >\n             <div className=\"resultado col s12 m8 l6 offset-m2 offset-13\" >\n                <div className=\"card-panel light-blue align-center\">\n                    <span className=\"white-text\">\n                        <h2>Resultado de clima de: {name} </h2>\n                        <p className=\"temperatura\">\n                            Actual:{ (main.temp - kelvin).toFixed(2) } &deg;C\n                            <img src={urlIcono} alt={alt} /> \n                        </p>\n                        <p>MAX. {main.temp_max - kelvin} &deg;C </p>\n                        <p>MIN. {main.temp_min - kelvin} &deg;C </p>\n                    </span>\n                </div>\n             </div>\n           </div>\n        )\n    }\n\n    render() {                     \n        return( \n            <div className=\"container\">\n                { this.mostrarResultado() }\n            </div>\n        )\n    }\n}\n\nClima.proptypes = { \n    resultado: PropTypes.object.isRequired\n}\n\nexport default Clima;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima';\n\n\nclass App extends Component {\n\n  state = { \n    error: '',\n    consulta: {},\n    resultado: {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.consulta !== this.state.consulta) { \n      this.consultarApi();\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ \n      error: false\n    })\n  }\n\n  consultarApi = () => { \n    const {cuidad, pais} =  this.state.consulta;\n    if(!cuidad || !pais) return null;\n\n    // leer la url y agregar el API key\n\n    const appId = '98b6e2ba6735856c17ef9d93b2be27a3';\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${cuidad},${pais}&appid=${appId}`;\n    console.log(url);\n\n    //query con fetch api consulta \n    fetch(url)\n      .then(respuesta => { \n        return respuesta.json();\n      })\n      .then(datos => { \n        this.setState({ \n          resultado: datos\n        })\n      })\n      .catch(error => { \n        console.log(error);\n      })\n  }\n\n  datosConsulta =  respuesta => { \n    if(respuesta.cuidad === '' || respuesta.pais === '' ) { \n      this.setState({ \n        error: true\n      }) \n    } else { \n      this.setState({ \n        consulta: respuesta,\n        error: false\n      })\n    }    \n  }\n\n  render() {\n\n      const {error} = this.state.error,\n            {cod} =  this.state.resultado;\n      \n      let resultado; \n\n      if(error) { \n        resultado = <Error mensaje=\"Ambos campos son obligatorios\" />\n      } else if(cod === \"404\") {\n        resultado = <Error mensaje=\"Cuidad No Encontrada\" />\n      }\n      else { \n        resultado = \n        < Clima \n          resultado = {this.state.resultado}\n        />\n      }\n\n    return (\n      <div className=\"App\">\n         <Header \n          titulo = 'Aplicacion Clima React'\n         />\n         <Formulario \n           datosConsulta = {this.datosConsulta} \n         />\n         {resultado} \n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}